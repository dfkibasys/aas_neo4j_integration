{% set sm = event.submodel %}
{% set smElems = collectAllSubmodelElements(sm) %}
statements:
- statement: |
    MERGE (s:Submodel { id: $submodel.id })
    SET s{% for eachLabel in sm.labels %}:{{eachLabel}}{% endfor %}  
    {% if sm.idShort -%}
    SET s.idShort = $submodel.idShort
    {%- endif %} 
    
    {% if meta.sourceUrl -%}
    SET s.sourceUrl = $submodel.sourceUrl
    {%- endif %}  
    {% if meta.registrationTime -%}
    SET s.registrationTime = $submodel.registrationTime
    {%- endif %} 
    {% for eachElem in smElems %} 
    MERGE (e{{ loop.index }}:SubmodelElement {smId: $submodel.id, idShortPath: $sme_{{ loop.index }}.idShortPath })
    SET e{{ loop.index }}{% for eachLabel in eachElem.labels %}:{{eachLabel}}{% endfor %} 
    {% if eachElem.idShort -%}
    SET e{{ loop.index }}.idShort = $sme_{{ loop.index }}.idShort
    {%- endif %}
    {%- if eachElem.value is not null %} 
    SET e{{ loop.index }}.value = $sme_{{ loop.index }}.value
    {%- endif %} 
    {% endfor %}
    {% for eachElem in smElems %}
    {%- if eachElem.isRootElement %} 
    MERGE (s)-[:HAS_ELEMENT]->(e{{loop.index}}) 
    {%- else %} 
    MERGE (e{{ eachElem.parentPos }})-[:HAS_ELEMENT]->(e{{loop.index}})
    {%- endif %}
    {% set outerLoopIndex = loop.index %}
    {% for eachRef in eachElem.refs %} 
    MERGE (re_{{outerLoopIndex}}_{{ loop.index }}{%if eachRef.label is not null %}:{{ eachRef.label }}{%- endif %}  { id: $sme_{{ outerLoopIndex }}.refs.r_{{ loop.index }}.id})
    MERGE (e{{outerLoopIndex}}) -[:HAS_REFERENCE {type: $sme_{{ outerLoopIndex }}.refs.r_{{ loop.index }}.type} ]->(re_{{outerLoopIndex}}_{{ loop.index }}) 
    {%- endfor %}  
    {% endfor %}
    {% for eachRef in sm.refs %} 
    MERGE (r_{{ loop.index }}{%if eachRef.label is not null %}:{{ eachRef.label }}{%- endif %}  { id: $refs.r_{{ loop.index }}.id{% if eachRef.idShortPath is not null %}, idShortPath: $refs.r_{{ loop.index }}.idShortPath{% endif %}})
    MERGE (a) -[:HAS_REFERENCE {type: $refs.r_{{ loop.index }}.type} ]->(r_{{ loop.index }}) 
    {%- endfor %} 
  parameters:
    submodel:
      id: "{{ sm.id }}"
      {% if sm.idShort -%}
      idShort: "{{ sm.idShort }}"
      {%- endif %} 
      {% if meta.sourceUrl and sm.id -%}
      {% set idEncoded = sm.id | base64encode | replace({ '=': '' }) | urlencode -%} 
      {% set url = meta.sourceUrl ~ "/submodels/" ~ idEncoded -%}
      sourceUrl: "{{ url }}" {% endif %} 
      {% if meta.registrationTime -%}
      registrationTime: {{ meta.registrationTime }}
      {%- endif %} 
    {% for eachElem in smElems %} 
    sme_{{ loop.index }}: 
      {% if eachElem.idShort -%}
      idShort: "{{eachElem.idShort}}"
      {%- endif %} 
      idShortPath: "{{eachElem.idShortPath}}" 
      {%- if eachElem.value is not null %} 
      value: "{{eachElem.value}}" 
      {%- endif %} 
      {%- if eachElem.refs is not empty %} 
      refs: 
        {%- for eachRef in eachElem.refs %} 
        r_{{ loop.index }}:
          id: "{{ eachRef.id }}"
          {%- if eachRef.idShortPath is not null %} 
          path: "{{ eachRef.idShortPath }}"
          {%- endif %} 
          {%- if eachRef.label is not null %} 
          label: "{{ eachRef.label }}"
          {%- endif %} 
          type: "{{ eachRef.refType }}" 
        {%- endfor %} 
      {% endif %}
    {% endfor %}
    {%- if sm.refs is not empty %} 
    refs: 
      {% for eachRef in sm.refs %} 
      r_{{ loop.index }}:
        id: "{{ eachRef.id }}"
        {%- if eachRef.idShortPath is not null %} 
        path: "{{ eachRef.idShortPath }}"
        {%- endif %} 
        {%- if eachRef.label is not null %} 
        label: "{{ eachRef.label }}" 
        {%- endif %} 
        type: "{{ eachRef.refType }}" 
      {%- endfor %} 
    {% endif %}
      